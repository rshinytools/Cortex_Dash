{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(git init:*)",
      "Bash(git branch:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git config:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git fetch:*)",
      "Bash(git clone:*)",
      "Bash(cp:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(python:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(alembic revision:*)",
      "Bash(chmod:*)",
      "Bash(. venv/bin/activate)",
      "Bash(PYTHONPATH=. alembic heads)",
      "Bash(PYTHONPATH=. alembic merge -m \"Merge heads\" 1a31ce608336 clinical_models_001)",
      "Bash(curl:*)",
      "Bash(kill:*)",
      "Bash(pkill:*)",
      "Bash(npx create-next-app:*)",
      "Bash(npx --yes create-next-app@latest frontend --ts --tailwind --app --src-dir --import-alias \"@/*\" --use-npm --eslint --no-turbopack)",
      "Bash(npx shadcn@latest init:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm install:*)",
      "Bash(npx shadcn:*)",
      "Bash(npm run dev:*)",
      "Bash(make:*)",
      "Bash(true)",
      "Bash(npm run type-check:*)",
      "Bash(npm run:*)",
      "Bash(PYTHONPATH=. python scripts/create_default_org.py)",
      "Bash(PGPASSWORD=changethis psql:*)",
      "Bash(touch:*)",
      "Bash(PYTHONPATH=. python scripts/fix_admin_role.py)",
      "Bash(alembic upgrade:*)",
      "Bash(docker exec:*)",
      "Bash(alembic:*)",
      "Bash(docker compose exec:*)",
      "Bash(docker compose:*)",
      "Bash(docker-compose:*)",
      "Bash(docker logs:*)",
      "Bash(docker start:*)",
      "Bash(docker restart:*)",
      "Bash(sed:*)",
      "Bash(npm info:*)",
      "Bash(npm ci:*)",
      "Bash(npm ls:*)",
      "Bash(for f in *.py)",
      "Bash(do echo \"=== $f ===\")",
      "Bash(done)",
      "Bash(docker run:*)",
      "Bash(-e POSTGRES_SERVER=postgres )",
      "Bash(-e POSTGRES_USER=postgres )",
      "Bash(-e POSTGRES_PASSWORD=changethis )",
      "Bash(-e POSTGRES_DB=clinical_dashboard )",
      "Bash(-e PROJECT_NAME=\"Clinical Dashboard\" )",
      "Bash(-e FIRST_SUPERUSER=admin@sagarmatha.ai )",
      "Bash(-e FIRST_SUPERUSER_PASSWORD=adadad123 )",
      "Bash(-e SECRET_KEY=test-key )",
      "Bash(cortex_dash-backend alembic upgrade:*)",
      "Bash(export TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTI1OTg5NDMsInN1YiI6IjNlOTI0ZDkzLTk2ODQtNDk4OC05NWM0LTlkYWUyM2YzOTlhNSJ9.zdQA2_Wdi4lnQ32FVnCXuUk9iORCPYruGiJWqIZ4tdU\")",
      "Bash(cat:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_install",
      "Bash(npx tsc:*)",
      "Bash(echo:*)",
      "Bash(npx prettier:*)",
      "Bash(docker cp:*)",
      "Bash(git remote set-url:*)",
      "Bash(docker stop:*)",
      "Bash(docker rm:*)",
      "Bash(git remote set-head:*)",
      "Bash(git --help remote)",
      "Bash(taskkill:*)",
      "Bash(docker ps:*)",
      "Bash(docker system prune:*)",
      "Bash(.rebuild.bat backend)",
      "Bash(cmd /c:*)",
      "Bash(where python)",
      "Bash(py tests/test_widget_engines_simple.py)",
      "Bash(py tests/test_all_widgets.py)",
      "Bash(py tests/test_backend_services.py)",
      "Bash(py tests/test_implementation_complete.py)",
      "Bash(py teststest_rbac_system.py)",
      "Bash(py tests/test_rbac_system.py)",
      "Bash(py tests/test_rbac_simple.py)",
      "Bash(py teststest_data_source_framework.py)",
      "Bash(py tests/test_data_source_framework.py)",
      "Bash(py tests/test_api_integrations.py)",
      "Bash(py tests/test_advanced_features.py)",
      "Bash(for file in backend/app/services/widget_engines/*.py)",
      "Bash(do sed -i 's/from backend\\.app\\./from app\\./g' \"$file\")",
      "Bash(bash:*)",
      "Bash(./rebuild-frontend.sh:*)",
      "Bash(docker build:*)",
      "Bash(.fresh_install_auto.bat)",
      "Bash(py:*)",
      "Bash(git reset:*)",
      "Bash(docker inspect:*)",
      "Bash(./test_study_init.bat)",
      "Bash(export TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTYyNTAyMjQsInN1YiI6IjRlMzEyMWZlLWI4YmUtNDBmMy1iMjNmLWQ5ZmFkOWFlYjYzOSJ9.6qTwXz6NBWucl-8FZ_FddIjl3k5CIQXcViIOb1le1lI\")",
      "Bash(export TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTYyNjI5NDEsInN1YiI6IjRlMzEyMWZlLWI4YmUtNDBmMy1iMjNmLWQ5ZmFkOWFlYjYzOSJ9.dIfaycMyAYSQUCEVHgDM8J-gIMtq60jFW6nABQ4TbuU\")",
      "Bash(export TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTYzNDgwODksInN1YiI6IjRlMzEyMWZlLWI4YmUtNDBmMy1iMjNmLWQ5ZmFkOWFlYjYzOSJ9.ZkYjJrO4TkwbqnmrJMqrYRhBfKJVa4BP8_tZXboLpUc\")",
      "Bash(git pull:*)",
      "Bash(git merge:*)",
      "Bash(docker volume:*)",
      "Bash(for file in frontend/src/app/admin/*/page.tsx frontend/src/app/admin/*/*/page.tsx)",
      "Bash(do if ! grep -q \"AuthGuard\" \"$file\")",
      "Bash(then echo \"Missing AuthGuard: $file\")",
      "Bash(fi)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "C:\\c\\Users\\amuly\\OneDrive\\AetherClinical",
      "C:\\data\\4e3121fe-b8be-40f3-b23f-d9fad9aeb639\\studies\\521b4b98-87ec-4643-9103-eae78e2dad79",
      "C:\\data\\05e5ec7b-f79c-497b-918e-1a0ec2fe5bb4\\studies\\05e5ec7b-f79c-497b-918e-1a0ec2fe5bb4"
    ]
  }
}