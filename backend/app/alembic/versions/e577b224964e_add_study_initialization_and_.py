"""Add study initialization and transformation fields

Revision ID: e577b224964e
Revises: 1319a427c2cc
Create Date: 2025-08-12 20:33:13.241571

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e577b224964e'
down_revision = '1319a427c2cc'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('field_mapping_templates',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('org_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('field_mappings', sa.JSON(), nullable=True),
    sa.Column('applicable_widget_types', sa.JSON(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_field_mapping_templates_name'), 'field_mapping_templates', ['name'], unique=False)
    op.create_index(op.f('ix_field_mapping_templates_org_id'), 'field_mapping_templates', ['org_id'], unique=False)
    op.create_table('data_source_uploads',
    sa.Column('study_id', sa.Uuid(), nullable=False),
    sa.Column('upload_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'UPLOADING', 'UPLOADED', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', name='uploadstatus'), nullable=False),
    sa.Column('upload_timestamp', sa.DateTime(), nullable=False),
    sa.Column('original_filename', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('file_format', sa.Enum('CSV', 'SAS7BDAT', 'XPT', 'XLSX', 'PARQUET', 'ZIP', name='fileformat'), nullable=False),
    sa.Column('file_size_mb', sa.Float(), nullable=False),
    sa.Column('raw_path', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=False),
    sa.Column('processed_path', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('processing_started_at', sa.DateTime(), nullable=True),
    sa.Column('processing_completed_at', sa.DateTime(), nullable=True),
    sa.Column('processing_duration_seconds', sa.Float(), nullable=True),
    sa.Column('files_extracted', sa.JSON(), nullable=True),
    sa.Column('total_rows', sa.Integer(), nullable=True),
    sa.Column('total_columns', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('warnings', sa.JSON(), nullable=True),
    sa.Column('upload_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('is_active_version', sa.Boolean(), nullable=False),
    sa.Column('superseded_by', sa.Uuid(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['study.id'], ),
    sa.ForeignKeyConstraint(['superseded_by'], ['data_source_uploads.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_data_source_uploads_status'), 'data_source_uploads', ['status'], unique=False)
    op.create_index(op.f('ix_data_source_uploads_study_id'), 'data_source_uploads', ['study_id'], unique=False)
    op.create_table('pipeline_configs',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('study_id', sa.Uuid(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('schedule_cron', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('retry_on_failure', sa.Boolean(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('timeout_seconds', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('is_current_version', sa.Boolean(), nullable=False),
    sa.Column('parent_version_id', sa.Uuid(), nullable=True),
    sa.Column('source_config', sa.JSON(), nullable=True),
    sa.Column('transformation_steps', sa.JSON(), nullable=True),
    sa.Column('output_config', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['parent_version_id'], ['pipeline_configs.id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['study.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pipeline_configs_name'), 'pipeline_configs', ['name'], unique=False)
    op.create_index(op.f('ix_pipeline_configs_study_id'), 'pipeline_configs', ['study_id'], unique=False)
    op.create_index(op.f('ix_pipeline_configs_version'), 'pipeline_configs', ['version'], unique=False)
    op.create_table('study_data_configurations',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('study_id', sa.Uuid(), nullable=False),
    sa.Column('dataset_schemas', sa.JSON(), nullable=True),
    sa.Column('global_mappings', sa.JSON(), nullable=True),
    sa.Column('data_quality_metrics', sa.JSON(), nullable=True),
    sa.Column('is_initialized', sa.Boolean(), nullable=False),
    sa.Column('initialization_completed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['study.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_study_data_configurations_study_id'), 'study_data_configurations', ['study_id'], unique=True)
    op.create_table('widget_data_mappings',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('study_id', sa.Uuid(), nullable=False),
    sa.Column('widget_id', sa.Uuid(), nullable=False),
    sa.Column('field_mappings', sa.JSON(), nullable=True),
    sa.Column('data_source_config', sa.JSON(), nullable=True),
    sa.Column('validation_rules', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['study.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['widget_id'], ['widget_definitions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_widget_data_mappings_study_id'), 'widget_data_mappings', ['study_id'], unique=False)
    op.create_index(op.f('ix_widget_data_mappings_widget_id'), 'widget_data_mappings', ['widget_id'], unique=False)
    op.create_table('pipeline_executions',
    sa.Column('pipeline_config_id', sa.Uuid(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'SUCCESS', 'FAILED', 'CANCELLED', 'SCHEDULED', name='pipelinestatus'), nullable=False),
    sa.Column('triggered_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('task_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('duration_seconds', sa.Float(), nullable=True),
    sa.Column('input_records', sa.Integer(), nullable=True),
    sa.Column('output_records', sa.Integer(), nullable=True),
    sa.Column('records_failed', sa.Integer(), nullable=True),
    sa.Column('data_version_id', sa.Uuid(), nullable=True),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('error_details', sa.JSON(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('execution_log', sa.JSON(), nullable=True),
    sa.Column('output_path', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('output_version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['data_version_id'], ['data_source_uploads.id'], ),
    sa.ForeignKeyConstraint(['pipeline_config_id'], ['pipeline_configs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pipeline_executions_pipeline_config_id'), 'pipeline_executions', ['pipeline_config_id'], unique=False)
    op.create_index(op.f('ix_pipeline_executions_status'), 'pipeline_executions', ['status'], unique=False)
    op.create_index(op.f('ix_pipeline_executions_task_id'), 'pipeline_executions', ['task_id'], unique=False)
    op.create_table('transformation_scripts',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('pipeline_config_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('script_type', sa.Enum('PYTHON_SCRIPT', 'SQL_QUERY', 'MAPPING', 'AGGREGATION', 'FILTER', 'JOIN', 'PIVOT', 'CUSTOM', name='transformationtype'), nullable=False),
    sa.Column('script_content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('script_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_validated', sa.Boolean(), nullable=False),
    sa.Column('validation_errors', sa.JSON(), nullable=True),
    sa.Column('allowed_imports', sa.JSON(), nullable=True),
    sa.Column('resource_limits', sa.JSON(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('is_current_version', sa.Boolean(), nullable=False),
    sa.Column('parent_version_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['parent_version_id'], ['transformation_scripts.id'], ),
    sa.ForeignKeyConstraint(['pipeline_config_id'], ['pipeline_configs.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transformation_scripts_pipeline_config_id'), 'transformation_scripts', ['pipeline_config_id'], unique=False)
    op.create_table('pipeline_execution_steps',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('execution_id', sa.Uuid(), nullable=False),
    sa.Column('step_index', sa.Integer(), nullable=False),
    sa.Column('step_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('step_type', sa.Enum('PYTHON_SCRIPT', 'SQL_QUERY', 'MAPPING', 'AGGREGATION', 'FILTER', 'JOIN', 'PIVOT', 'CUSTOM', name='transformationtype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'SUCCESS', 'FAILED', 'CANCELLED', 'SCHEDULED', name='pipelinestatus'), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('duration_seconds', sa.Float(), nullable=True),
    sa.Column('input_records', sa.Integer(), nullable=True),
    sa.Column('output_records', sa.Integer(), nullable=True),
    sa.Column('step_config', sa.JSON(), nullable=True),
    sa.Column('result_summary', sa.JSON(), nullable=True),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['execution_id'], ['pipeline_executions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pipeline_execution_steps_execution_id'), 'pipeline_execution_steps', ['execution_id'], unique=False)
    op.add_column('study', sa.Column('initialization_status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True))
    op.add_column('study', sa.Column('initialization_progress', sa.Integer(), nullable=True))
    op.add_column('study', sa.Column('initialization_steps', sa.JSON(), nullable=True))
    op.add_column('study', sa.Column('template_applied_at', sa.DateTime(), nullable=True))
    op.add_column('study', sa.Column('data_uploaded_at', sa.DateTime(), nullable=True))
    op.add_column('study', sa.Column('mappings_configured_at', sa.DateTime(), nullable=True))
    op.add_column('study', sa.Column('activated_at', sa.DateTime(), nullable=True))
    op.add_column('study', sa.Column('last_transformation_at', sa.DateTime(), nullable=True))
    op.add_column('study', sa.Column('transformation_status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True))
    op.add_column('study', sa.Column('transformation_count', sa.Integer(), nullable=False))
    op.add_column('study', sa.Column('derived_datasets', sa.JSON(), nullable=True))
    op.add_column('study', sa.Column('transformation_errors', sa.JSON(), nullable=True))
    op.alter_column('study', 'status',
               existing_type=postgresql.ENUM('PLANNING', 'SETUP', 'ACTIVE', 'PAUSED', 'COMPLETED', 'ARCHIVED', name='studystatus'),
               nullable=True)
    op.drop_index('ix_template_change_logs_template_id', table_name='template_change_logs')
    op.alter_column('template_drafts', 'draft_content',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('template_drafts', 'changes_summary',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True,
               existing_server_default=sa.text("'[]'::json"))
    op.drop_index('ix_template_drafts_template_id', table_name='template_drafts')
    op.alter_column('template_versions', 'change_summary',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True,
               existing_server_default=sa.text("'[]'::json"))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('template_versions', 'change_summary',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False,
               existing_server_default=sa.text("'[]'::json"))
    op.create_index('ix_template_drafts_template_id', 'template_drafts', ['template_id'], unique=False)
    op.alter_column('template_drafts', 'changes_summary',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False,
               existing_server_default=sa.text("'[]'::json"))
    op.alter_column('template_drafts', 'draft_content',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    op.create_index('ix_template_change_logs_template_id', 'template_change_logs', ['template_id'], unique=False)
    op.alter_column('study', 'status',
               existing_type=postgresql.ENUM('PLANNING', 'SETUP', 'ACTIVE', 'PAUSED', 'COMPLETED', 'ARCHIVED', name='studystatus'),
               nullable=False)
    op.drop_column('study', 'transformation_errors')
    op.drop_column('study', 'derived_datasets')
    op.drop_column('study', 'transformation_count')
    op.drop_column('study', 'transformation_status')
    op.drop_column('study', 'last_transformation_at')
    op.drop_column('study', 'activated_at')
    op.drop_column('study', 'mappings_configured_at')
    op.drop_column('study', 'data_uploaded_at')
    op.drop_column('study', 'template_applied_at')
    op.drop_column('study', 'initialization_steps')
    op.drop_column('study', 'initialization_progress')
    op.drop_column('study', 'initialization_status')
    op.drop_index(op.f('ix_pipeline_execution_steps_execution_id'), table_name='pipeline_execution_steps')
    op.drop_table('pipeline_execution_steps')
    op.drop_index(op.f('ix_transformation_scripts_pipeline_config_id'), table_name='transformation_scripts')
    op.drop_table('transformation_scripts')
    op.drop_index(op.f('ix_pipeline_executions_task_id'), table_name='pipeline_executions')
    op.drop_index(op.f('ix_pipeline_executions_status'), table_name='pipeline_executions')
    op.drop_index(op.f('ix_pipeline_executions_pipeline_config_id'), table_name='pipeline_executions')
    op.drop_table('pipeline_executions')
    op.drop_index(op.f('ix_widget_data_mappings_widget_id'), table_name='widget_data_mappings')
    op.drop_index(op.f('ix_widget_data_mappings_study_id'), table_name='widget_data_mappings')
    op.drop_table('widget_data_mappings')
    op.drop_index(op.f('ix_study_data_configurations_study_id'), table_name='study_data_configurations')
    op.drop_table('study_data_configurations')
    op.drop_index(op.f('ix_pipeline_configs_version'), table_name='pipeline_configs')
    op.drop_index(op.f('ix_pipeline_configs_study_id'), table_name='pipeline_configs')
    op.drop_index(op.f('ix_pipeline_configs_name'), table_name='pipeline_configs')
    op.drop_table('pipeline_configs')
    op.drop_index(op.f('ix_data_source_uploads_study_id'), table_name='data_source_uploads')
    op.drop_index(op.f('ix_data_source_uploads_status'), table_name='data_source_uploads')
    op.drop_table('data_source_uploads')
    op.drop_index(op.f('ix_field_mapping_templates_org_id'), table_name='field_mapping_templates')
    op.drop_index(op.f('ix_field_mapping_templates_name'), table_name='field_mapping_templates')
    op.drop_table('field_mapping_templates')
    # ### end Alembic commands ###
